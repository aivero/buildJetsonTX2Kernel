diff -Naur a/kernel/kernel-4.4/drivers/media/usb/uvc/Makefile b/kernel/kernel-4.4/drivers/media/usb/uvc/Makefile
--- a/kernel/kernel-4.4/drivers/media/usb/uvc/Makefile	2017-07-20 07:41:21.000000000 +0000
+++ b/kernel/kernel-4.4/drivers/media/usb/uvc/Makefile	2018-01-25 15:08:38.797682034 +0000
@@ -1,3 +1,4 @@
+CONFIG_MODULE_SIG=n
 uvcvideo-objs  := uvc_driver.o uvc_queue.o uvc_v4l2.o uvc_video.o uvc_ctrl.o \
 		  uvc_status.o uvc_isight.o uvc_debugfs.o
 ifeq ($(CONFIG_MEDIA_CONTROLLER),y)
diff -Naur a/kernel/kernel-4.4/drivers/media/usb/uvc/uvc_ctrl.c b/kernel/kernel-4.4/drivers/media/usb/uvc/uvc_ctrl.c
--- a/kernel/kernel-4.4/drivers/media/usb/uvc/uvc_ctrl.c	2017-07-20 07:41:21.000000000 +0000
+++ b/kernel/kernel-4.4/drivers/media/usb/uvc/uvc_ctrl.c	2018-01-25 14:39:01.187382407 +0000
@@ -356,6 +356,7 @@
 	{ 0, "Disabled" },
 	{ 1, "50 Hz" },
 	{ 2, "60 Hz" },
+        { 3, "Auto" },
 };
 
 static struct uvc_menu_info exposure_auto_controls[] = {
diff -Naur a/kernel/kernel-4.4/drivers/media/usb/uvc/uvc_driver.c b/kernel/kernel-4.4/drivers/media/usb/uvc/uvc_driver.c
--- a/kernel/kernel-4.4/drivers/media/usb/uvc/uvc_driver.c	2017-07-20 07:41:21.000000000 +0000
+++ b/kernel-4.4/drivers/media/usb/uvc/uvc_driver.c	2018-01-25 14:46:41.103245149 +0000
@@ -168,6 +168,73 @@
 		.guid		= UVC_GUID_FORMAT_RW10,
 		.fcc		= V4L2_PIX_FMT_SRGGB10P,
 	},
+
+       {
+               .name           = "Raw data 8-bit (RAW8)",
+               .guid           = UVC_GUID_FORMAT_RAW8,
+               .fcc            = V4L2_PIX_FMT_GREY,
+       },
+        {      // TAKEN FROM MASTER
+               .name           = "Raw data 8-bit (RAW8)",
+               .guid           = UVC_GUID_FORMAT_RAW8,
+               .fcc            = V4L2_PIX_FMT_RAW8,
+        },
+       {
+               .name           = "Raw data 16-bit (RW16)",
+               .guid           = UVC_GUID_FORMAT_RW16,
+               .fcc            = V4L2_PIX_FMT_RW16,
+       },
+       {
+               .name           = "Depth 16-bit (INVZ)",
+               .guid           = UVC_GUID_FORMAT_INVZ,
+               .fcc            = V4L2_PIX_FMT_Z16,
+       },
+       {
+               .name           = "Depth:IR 16:8 24-bit (INZI)",
+               .guid           = UVC_GUID_FORMAT_INZI,
+               .fcc            = V4L2_PIX_FMT_INZI,
+       },
+        {
+               .name           = "Depth 16-bit (INVR)",
+               .guid           = UVC_GUID_FORMAT_INVR,
+               .fcc            = V4L2_PIX_FMT_INVR,
+        },
+        {
+               .name           = "Depth:IR 16:8 24-bit (INRI)",
+               .guid           = UVC_GUID_FORMAT_INRI,
+               .fcc            = V4L2_PIX_FMT_INRI,
+        },
+       {
+               .name           = "Infrared 8-bit (INVI)",
+               .guid           = UVC_GUID_FORMAT_INVI,
+               .fcc            = V4L2_PIX_FMT_GREY,
+       },
+        {
+               .name           = "FlickerIR 8-bit (RELI)",
+               .guid           = UVC_GUID_FORMAT_RELI,
+               .fcc            = V4L2_PIX_FMT_RELI,
+        },
+       {
+               .name           = "Luminosity data 8-bit (L8)",
+               .guid           = UVC_GUID_FORMAT_L8,
+               .fcc            = V4L2_PIX_FMT_GREY,
+       },
+       {
+               .name           = "Luminosity data 16-bit (L16)",
+               .guid           = UVC_GUID_FORMAT_L16,
+               .fcc            = V4L2_PIX_FMT_Y16,
+       },
+       {
+               .name           = "Depth data 16-bit (D16)",
+               .guid           = UVC_GUID_FORMAT_D16,
+               .fcc            = V4L2_PIX_FMT_Z16,
+       },
+        {
+                .name           = "16-bit Bayer BGBG/GRGR",
+                .guid           = UVC_GUID_FORMAT_BAYER16,
+                .fcc            = V4L2_PIX_FMT_SBGGR16,
+        },
+
 };
 
 /* ------------------------------------------------------------------------
@@ -2559,6 +2626,125 @@
 	  .bInterfaceSubClass	= 1,
 	  .bInterfaceProtocol	= 0,
 	  .driver_info		= UVC_QUIRK_FORCE_Y8 },
+
+       /* Intel RS450 depth camera */
+       { .match_flags          = USB_DEVICE_ID_MATCH_DEVICE
+                               | USB_DEVICE_ID_MATCH_INT_INFO,
+         .idVendor             = 0x8086,
+         .idProduct            = 0x0ad5,
+         .bInterfaceClass      = USB_CLASS_VIDEO,
+         .bInterfaceSubClass   = 1,
+         .bInterfaceProtocol   = 0,
+         .driver_info          = UVC_QUIRK_APPEND_UVC_HEADER },
+       /* Intel RS440 depth camera */
+       { .match_flags          = USB_DEVICE_ID_MATCH_DEVICE
+                               | USB_DEVICE_ID_MATCH_INT_INFO,
+         .idVendor             = 0x8086,
+         .idProduct            = 0x0af6,
+         .bInterfaceClass      = USB_CLASS_VIDEO,
+         .bInterfaceSubClass   = 1,
+         .bInterfaceProtocol   = 0,
+         .driver_info          = UVC_QUIRK_APPEND_UVC_HEADER },
+       /* Intel RS430 depth camera */
+       { .match_flags          = USB_DEVICE_ID_MATCH_DEVICE
+                               | USB_DEVICE_ID_MATCH_INT_INFO,
+         .idVendor             = 0x8086,
+         .idProduct            = 0x0ad4,
+         .bInterfaceClass      = USB_CLASS_VIDEO,
+         .bInterfaceSubClass   = 1,
+         .bInterfaceProtocol   = 0,
+         .driver_info          = UVC_QUIRK_APPEND_UVC_HEADER },
+       /* Intel RS420 depth camera */
+       { .match_flags          = USB_DEVICE_ID_MATCH_DEVICE
+                               | USB_DEVICE_ID_MATCH_INT_INFO,
+         .idVendor             = 0x8086,
+         .idProduct            = 0x0ad3,
+         .bInterfaceClass      = USB_CLASS_VIDEO,
+         .bInterfaceSubClass   = 1,
+         .bInterfaceProtocol   = 0,
+         .driver_info          = UVC_QUIRK_APPEND_UVC_HEADER },
+       /* Intel RS410 depth camera */
+       { .match_flags          = USB_DEVICE_ID_MATCH_DEVICE
+                               | USB_DEVICE_ID_MATCH_INT_INFO,
+         .idVendor             = 0x8086,
+         .idProduct            = 0x0ad2,
+         .bInterfaceClass      = USB_CLASS_VIDEO,
+         .bInterfaceSubClass   = 1,
+         .bInterfaceProtocol   = 0,
+         .driver_info          = UVC_QUIRK_APPEND_UVC_HEADER },
+       /* Intel RS400 depth camera */
+       { .match_flags          = USB_DEVICE_ID_MATCH_DEVICE
+                               | USB_DEVICE_ID_MATCH_INT_INFO,
+         .idVendor             = 0x8086,
+         .idProduct            = 0x0ad1,
+         .bInterfaceClass      = USB_CLASS_VIDEO,
+         .bInterfaceSubClass   = 1,
+         .bInterfaceProtocol   = 0,
+         .driver_info          = UVC_QUIRK_APPEND_UVC_HEADER },
+       /* Intel RS420_MM depth camera */
+       { .match_flags          = USB_DEVICE_ID_MATCH_DEVICE
+                               | USB_DEVICE_ID_MATCH_INT_INFO,
+         .idVendor             = 0x8086,
+         .idProduct            = 0x0afe,
+         .bInterfaceClass      = USB_CLASS_VIDEO,
+         .bInterfaceSubClass   = 1,
+         .bInterfaceProtocol   = 0,
+         .driver_info          = UVC_QUIRK_APPEND_UVC_HEADER },
+         /* Intel D410_MM/ASRT depth camera */
+       { .match_flags          = USB_DEVICE_ID_MATCH_DEVICE
+                               | USB_DEVICE_ID_MATCH_INT_INFO,
+         .idVendor                     = 0x8086,
+         .idProduct            = 0x0aff,
+         .bInterfaceClass      = USB_CLASS_VIDEO,
+         .bInterfaceSubClass   = 1,
+         .bInterfaceProtocol   = 0,
+         .driver_info          = UVC_QUIRK_APPEND_UVC_HEADER },
+         /* Intel D400_MM/PSRT depth camera */
+       { .match_flags          = USB_DEVICE_ID_MATCH_DEVICE
+                               | USB_DEVICE_ID_MATCH_INT_INFO,
+         .idVendor                     = 0x8086,
+         .idProduct            = 0x0b00,
+         .bInterfaceClass      = USB_CLASS_VIDEO,
+         .bInterfaceSubClass   = 1,
+         .bInterfaceProtocol   = 0,
+         .driver_info          = UVC_QUIRK_APPEND_UVC_HEADER },
+         /* Intel D430_MM/AWGCT depth camera */
+       { .match_flags          = USB_DEVICE_ID_MATCH_DEVICE
+                               | USB_DEVICE_ID_MATCH_INT_INFO,
+         .idVendor                     = 0x8086,
+         .idProduct            = 0x0b01,
+         .bInterfaceClass      = USB_CLASS_VIDEO,
+         .bInterfaceSubClass   = 1,
+         .bInterfaceProtocol   = 0,
+         .driver_info          = UVC_QUIRK_APPEND_UVC_HEADER },
+         /* Intel D460/DS5U depth camera */
+       { .match_flags          = USB_DEVICE_ID_MATCH_DEVICE
+                               | USB_DEVICE_ID_MATCH_INT_INFO,
+         .idVendor                     = 0x8086,
+         .idProduct            = 0x0b03,
+         .bInterfaceClass      = USB_CLASS_VIDEO,
+         .bInterfaceSubClass   = 1,
+         .bInterfaceProtocol   = 0,
+         .driver_info          = UVC_QUIRK_APPEND_UVC_HEADER },
+         /* Intel D435/AWGC depth camera */
+       { .match_flags          = USB_DEVICE_ID_MATCH_DEVICE
+                               | USB_DEVICE_ID_MATCH_INT_INFO,
+         .idVendor                     = 0x8086,
+         .idProduct            = 0x0b07,
+         .bInterfaceClass      = USB_CLASS_VIDEO,
+        .bInterfaceSubClass   = 1,
+         .bInterfaceProtocol   = 0,
+         .driver_info          = UVC_QUIRK_APPEND_UVC_HEADER },
+         /* Intel SR300 depth camera */
+       { .match_flags          = USB_DEVICE_ID_MATCH_DEVICE
+                               | USB_DEVICE_ID_MATCH_INT_INFO,
+         .idVendor                     = 0x8086,
+         .idProduct            = 0x0aa5,
+         .bInterfaceClass      = USB_CLASS_VIDEO,
+         .bInterfaceSubClass   = 1,
+         .bInterfaceProtocol   = 0,
+         .driver_info          = UVC_QUIRK_APPEND_UVC_HEADER },
+
 	/* Generic USB Video Class */
 	{ USB_INTERFACE_INFO(USB_CLASS_VIDEO, 1, 0) },
 	{}
diff -Naur a/kernel/kernel-4.4/drivers/media/usb/uvc/uvc_video.c b/kernel/kernel-4.4/drivers/media/usb/uvc/uvc_video.c
--- a/kernel/kernel-4.4/drivers/media/usb/uvc/uvc_video.c	2017-07-20 07:41:21.000000000 +0000
+++ b/kernel/kernel-4.4/drivers/media/usb/uvc/uvc_video.c	2018-01-25 14:50:43.485121428 +0000
@@ -1202,7 +1202,6 @@
 		/* Process the header again. */
 		uvc_video_decode_end(stream, buf, mem,
 			urb->iso_frame_desc[i].actual_length);
-
 		if (buf->state == UVC_BUF_STATE_READY) {
 			uvc_video_validate_buffer(stream, buf);
 			buf = uvc_queue_next_buffer(&stream->queue, buf);
@@ -1234,8 +1233,20 @@
 		do {
 			ret = uvc_video_decode_start(stream, buf, mem, len);
 			if (ret == -EAGAIN)
+#if 0
 				buf = uvc_queue_next_buffer(&stream->queue,
 							    buf);
+#endif
+#if 1
+                       {
+                               if (stream->dev->quirks & UVC_QUIRK_APPEND_UVC_HEADER)
+                               {
+                                       uvc_video_decode_data(stream, buf, stream->bulk.header,256);
+                               }
+                               buf = uvc_queue_next_buffer(&stream->queue,buf);
+                      }
+ 
+#endif
 		} while (ret == -EAGAIN);
 
 		/* If an error occurred skip the rest of the payload. */
@@ -1267,9 +1278,20 @@
 		if (!stream->bulk.skip_payload && buf != NULL) {
 			uvc_video_decode_end(stream, buf, stream->bulk.header,
 				stream->bulk.payload_size);
+#if 0
 			if (buf->state == UVC_BUF_STATE_READY)
 				buf = uvc_queue_next_buffer(&stream->queue,
 							    buf);
+#endif
+#if 1
+                       if (buf->state == UVC_BUF_STATE_READY) {
+                               if (stream->dev->quirks & UVC_QUIRK_APPEND_UVC_HEADER) {
+                                       uvc_video_decode_data(stream, buf, stream->bulk.header,
+                                                                                       stream->bulk.header_size);
+                               }
+                               buf = uvc_queue_next_buffer(&stream->queue, buf);
+                       }
+#endif 
 		}
 
 		stream->bulk.header_size = 0;
diff -Naur a/kernel/kernel-4.4/drivers/media/usb/uvc/uvcvideo.h b/kernel/kernel-4.4/drivers/media/usb/uvc/uvcvideo.h
--- a/kernel/kernel-4.4/drivers/media/usb/uvc/uvcvideo.h	2017-07-20 07:41:21.000000000 +0000
+++ b/kernel/kernel-4.4/drivers/media/usb/uvc/uvcvideo.h	2018-01-25 14:54:13.079821184 +0000
@@ -138,6 +138,42 @@
 #define UVC_GUID_FORMAT_RW10 \
 	{ 'R',  'W',  '1',  '0', 0x00, 0x00, 0x10, 0x00, \
 	 0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}
+#define UVC_GUID_FORMAT_RAW8 \
+    { 'R',  'A',  'W',  '8', 0x66, 0x1a, 0x42, 0xa2, \
+     0x90, 0x65, 0xd0, 0x18, 0x14, 0xa8, 0xef, 0x8a}
+#define UVC_GUID_FORMAT_RW16 \
+    { 'R',  'W',  '1',  '6', 0x00, 0x00, 0x10, 0x00, \
+     0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}
+#define UVC_GUID_FORMAT_INVZ \
+       { 'I',  'N',  'V',  'Z', 0x90, 0x2d, 0x58, 0x4a, \
+        0x92, 0x0b, 0x77, 0x3f, 0x1f, 0x2c, 0x55, 0x6b}
+#define UVC_GUID_FORMAT_INZI \
+       { 'I',  'N',  'Z',  'I', 0x66, 0x1a, 0x42, 0xa2, \
+        0x90, 0x65, 0xd0, 0x18, 0x14, 0xa8, 0xef, 0x8a}
+#define UVC_GUID_FORMAT_INVR \
+       { 'I',  'N',  'V',  'R', 0x90, 0x2d, 0x58, 0x4a, \
+        0x92, 0x0b, 0x77, 0x3f, 0x1f, 0x2c, 0x55, 0x6b}
+#define UVC_GUID_FORMAT_INRI \
+       { 'I',  'N',  'R',  'I', 0x90, 0x2d, 0x58, 0x4a, \
+        0x92, 0x0b, 0x77, 0x3f, 0x1f, 0x2c, 0x55, 0x6b}
+#define UVC_GUID_FORMAT_INVI \
+       { 'I',  'N',  'V',  'I', 0xdb, 0x57, 0x49, 0x5e, \
+        0x8e, 0x3f, 0xf4, 0x79, 0x53, 0x2b, 0x94, 0x6f}
+#define UVC_GUID_FORMAT_RELI \
+       { 'R',  'E',  'L',  'I', 0x14, 0x13, 0x43, 0xf9, \
+        0xa7, 0x5a, 0xee, 0x6b, 0xbf, 0x01, 0x2e, 0x23}
+#define UVC_GUID_FORMAT_L8 \
+       { '2', 0x00,  0x00,  0x00, 0x00, 0x00, 0x10, 0x00, \
+        0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}
+#define UVC_GUID_FORMAT_L16 \
+       { 'Q', 0x00,  0x00,  0x00, 0x00, 0x00, 0x10, 0x00, \
+        0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}
+#define UVC_GUID_FORMAT_D16 \
+       { 'P', 0x00,  0x00,  0x00, 0x00, 0x00, 0x10, 0x00, \
+        0x80, 0x00, 0x00, 0xaa, 0x00, 0x38, 0x9b, 0x71}
+#define UVC_GUID_FORMAT_BAYER16 \
+    { 'R',  'W',  '1',  '6', 0x66, 0x1a, 0x42, 0xa2, \
+     0x90, 0x65, 0xd0, 0x18, 0x14, 0xa8, 0xef, 0x8a}
 
 /* ------------------------------------------------------------------------
  * Driver specific constants.
@@ -146,11 +182,11 @@
 #define DRIVER_VERSION		"1.1.1"
 
 /* Number of isochronous URBs. */
-#define UVC_URBS		5
+#define UVC_URBS		128
 /* Maximum number of packets per URB. */
 #define UVC_MAX_PACKETS		32
 /* Maximum status buffer size in bytes of interrupt URB. */
-#define UVC_MAX_STATUS_SIZE	16
+#define UVC_MAX_STATUS_SIZE	32
 
 #define UVC_CTRL_CONTROL_TIMEOUT	300
 #define UVC_CTRL_STREAMING_TIMEOUT	5000
@@ -171,6 +207,7 @@
 #define UVC_QUIRK_RESTRICT_FRAME_RATE	0x00000200
 #define UVC_QUIRK_RESTORE_CTRLS_ON_INIT	0x00000400
 #define UVC_QUIRK_FORCE_Y8		0x00000800
+#define UVC_QUIRK_APPEND_UVC_HEADER     0x00001000
 
 /* Format flags */
 #define UVC_FMT_FLAG_COMPRESSED		0x00000001
